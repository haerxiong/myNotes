问题：
	重复代码、业务复杂，导致可读性、修改性差。

	具体为：
		1、新加业务时，
			伪代码：
				if(A) doAM1();  if(B) doBM1();  if(A) doAM2();
				A为判断条件，do*M()为需要做的代码。
			doAM1()、doAM2()散落在整个下单流程中，无法直观的看到A业务做了哪些逻辑。
			不断的增加业务，导致下单主体流程不清晰。
		2、修改业务时，
			每次修改将会对其他业务造成影响。

改善方案：
	1、针对第一个问题，使用简单工厂模式进行改造。具体为：
		将if条件判断拆分写在Factory类中。
		将do?M()方法写在各自业务类中。创建一个下单接口类，其中针对各生命周期的定义多个方法。各业务单独写一个类，实现此接口，选择的实现各个方法。
