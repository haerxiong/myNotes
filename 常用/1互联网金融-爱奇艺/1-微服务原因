标题：为什么要重构到微服务

背景：2016年初，爱奇艺要把支付业务独立出来，10多个人，会员突破2千万。一些热片上映引发会员注册缴费的小高峰，每天订单量超百万。

原有系统是一个基于SSH架构的传统实现

struts做展示层，对数据访问层做个简单封装实现业务逻辑层，基于annotation的hibernate实现数据访问。

主要问题：

可扩展性差，性能提升困难
	web应用性能瓶颈基本都在数据库上。没有读写分离。数据量最大的表当时在5000万条数据。（技巧：没有跨表事务处理，复杂的处理，分解为多个语句来执行。）

	秒杀…每秒十万的量，超过MYSQL能承受的压力范围，需要把读操作切到内存数据库上。但是在SSH架构下，读写分离实现就得伤筋动骨了。hibernate封装了对数据库的操作，不用写SQL了，精细优化也搞不定了。

系统臃肿，学习周期长
	SSH架构，SVN版本控制，resin作为容器，Nginx前置路由。最大的一个类的规模是2000多行， 核心方法超过500行，大量重复代码， 每次调整都以失败告终。（代码臃肿、重复、格式不规范、无注释极大影响了新增人员的学习周期）

繁琐的版本控制
	新增功能，增强功能，bug修复，支持各种客户端，都在一个项目上进行,代码冲突的频率非常高。

测试成本高
	刚测试完的功能，由于分支合并冲突处理，又得重新跑一遍。

关于部署
	部署为集群，并采用jenkins来自动上线，问题不大。

关于新技术使用
	SSH框架屏蔽了其他技术的导入。缓存机制，数据库优化，读写分离等。