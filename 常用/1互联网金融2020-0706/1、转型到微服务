1、传统SSH架构问题：
	
	Dao层：
		优势是向对象操作数据库，简化开发工作；
		缺点是大数据量时，数据库访问优化困难。

	Service层：
		map作为参数，导致接口无法约束；
		Controller臃肿，难以测试。

2、支付网关拆分问题：

	按支付产品拆分，那么相同的逻辑部分如何共用？

	支付网关负责参数校验，不同产品校验不同，怎么办？


3、微服务设计

	子业务，owner\car\product\policy_detail\file，独立为微服务。

	聚合微服务组，聚合调用子服务。使微服务组独立演变。

	微服务组，可以同时调用多个子服务，实现并发操作。

	第三方接口使用mq异步消息。

4、技术实现：
	
	zookeeper注册中心，接收到API变化，重写nginx.conf，nginx的reload命令。

	删除zookeeper节点，等待流量结束后，关闭服务。

	protobuf 灵活的数据定义

	RPC连接池

	