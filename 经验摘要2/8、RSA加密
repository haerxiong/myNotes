RSA是目前最有影响力和最常用的公钥加密算法

公开密钥 publickey
私有密钥 privatekey

使用公钥加密，私钥解密

数字签名（服务端）：

	用Hash函数处理信息，生成摘要(digest)
	
	然后使用私钥加密digest，生成“数字签名”(signature)
	
	signature随信息一起发送
	
	公钥解密signature，得到digest

	接受者用hash函数也生成digest，两个对比保证信息未被更改

证书：

	原因：接受者公钥被黑客替换，黑客使用对应的新私钥则可以骗取信息。

	"证书中心"（certificate authority，简称CA）

		私钥的拥有者，去CA注册一个“数字证书”

		以后接受者则使用CA的公钥解开“数字证书”，获取拥有者的公钥。

备注：
	http://blog.csdn.net/slwsww/article/details/34422957


-------------------------------------------------------------------------
RSA加密算法【基础】

	1、互质关系
		两个正整数，除了1以外，没有其他公因子

		推论：

		任意两个质数构成互质关系。
		一个数是质数，另一个数只要不是前者的倍数，两者就构成互质关系。
		如果两个数之中，较大的那个数是质数，则两者构成互质关系。
		1和任意一个自然数是都是互质关系。
		p是大于1的整数，则p和p-1构成互质关系。
		p是大于1的奇数，则p和p-2构成互质关系。

	2、欧拉函数
		任意给定正整数n，请问在小于等于n的正整数之中，有多少个与n构成互质关系？用φ(n) 表示，即欧拉函数。

	3、欧拉定理
		欧拉定理是RSA算法的核心。

	4、模反元素
		如果两个正整数a和n互质，那么一定可以找到整数b，使得 ab-1 被n整除，或者说ab被n除的余数是1。这时，b就叫做a的"模反元素"。

RSA加密算法【密钥生成】

	第一步，随机选择两个不相等的质数p和q。

	第二步，计算p和q的乘积n。n的长度就是密钥长度。

	第三步，计算n的欧拉函数φ(n)。
		φ(n) = (p-1)(q-1)

	第四步，随机选择一个整数e，条件是1< e < φ(n)，且e与φ(n) 互质。

	第五步，计算e对于φ(n)的模反元素d。
		e*d-1被φ(n)整除，ed ≡ 1 (mod φ(n))

	第六步，将n和e封装成公钥，n和d封装成私钥。

			p    =  任意质数
　　		q	 =  任意质数
　　公/私	n    = pq
　　		φ(n) = (p-1)(q-1)
　　公钥	e    = 1~φ(n)与φ(n)互质的数
　　私钥	d    = e的模反元素

	对极大整数做因数分解的难度决定了RSA算法的可靠性。

RSA加密算法【加密和解密】

	