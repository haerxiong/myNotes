继承、接口
合成（成员变量）、聚合（入参）

1、策略模式。
	引用父类，实现不同子类。（类的多态）
	【使用与实现分离】

	与简单工厂结合，

	简单工厂：用一个Factory类，根据不同的String，生成不同的产品（子类）

2、装饰模式。
	相对于生成子类的方式，把特殊情况或不重要的功能外移，则更为灵活。

	可以把原类引入或作为入参。

3、代理模式。
	为其他对象提供代理，以实现对这个对象的访问。

	代理和被代理者，实现同一个接口。

4、工厂方法
	相对于简单工厂中，实现细节是依赖于String的。工厂方法定义了工厂的接口，不同工厂生产不同产品。使用哪个工厂由子类决定。

5、观察者模式 | 事件委托（动态代理）
	对象保存一个观察者列表，依次通知。这依赖于观察者接口。
	如果现有程序中没有这种接口设计，方法名都不相同。
	委托，即对方法的抽象，方法的分类。

6、桥接模式
	多维变换，让其中一种变化，成为成员变量，单独演变。
	
分类
	装饰模式、建造者模式
继承
	策略模式、模板方法、工厂方法
接口
	代理模式