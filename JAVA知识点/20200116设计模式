设计模式———可服用的面向对象软件元素。

三大类：
	创建型：使得创建对象更加灵活。
		不同的险种的订单，不同逻辑处理类。

	结构型：关注类和对象的组合。
		关注方法放在哪个类里？

	行为型：关注对象间通信。

六大原则：
	开闭原则：对扩展开发、对修改关闭。（关键就是抽象化）
	里氏代换原则：子类可以代替父类。
	依赖倒转原则：针对接口编程，依赖于抽象而不依赖于具体。
	接口隔离原则：使用多个隔离的接口，比使用单个接口好。
	迪米特法则：实体尽量少地与其他实体之间发生相互作用。
	合成服用原则：尽量使用合成/聚合，和布什继承。

------------------------------------------------------------------
创建类：
	单例、原型、建造者

	工厂模式、抽象工厂。

结构型：
	适配器、外观、代理、装饰器、组合

	桥接、享元、过滤器

行为型：
	责任链、迭代器、观察者、状态、策略

	命令、解释器、中介者、备忘录、访问者、模板
------------------------------------------------------------------

简单工厂（静态方法 决定创建对象的逻辑，单一产品多种类）
工厂模式（子类方法 决定创建对象的逻辑，单一产品多种类）
抽象工厂（超级工厂来创建工厂、工厂来创建对象，多产品多种类）


组合（把多个类组合在一起，调用组合类，而组合类来实现每个个体的调用）
外观（路由、api网关）


装饰器（包装模式的一种1/2。不扩展方法，修饰方法，使之更强大）
适配器（包装模式的一种2/2。适配两个不同的接口）
代理（隔离。）	
桥接（不同方法调用时，传入不同的子类实例）


代理（被代理者在编译时就已经确定了）
装饰（被装饰者在运行时，通过构造函数参数传入确定）